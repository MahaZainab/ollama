[
    {
        "code": "def Make Suite From Dict d label None suite Suite label label suite Set Dict d suite Normalize return suite",
        "question": "What does the code make ?",
        "answer": "a suite"
    },
    {
        "code": "def Make Suite From Dict d label None suite Suite label label suite Set Dict d suite Normalize return suite",
        "question": "Does the code make a suite ?",
        "answer": "Yes"
    },
    {
        "code": "def get version package name pre version None version os environ get 'OSLO PACKAGE VERSION' None if version return versionversion get version from pkg info package name if version return versionversion get version from git pre version if version return versionraise Exception ' Versioningforthisprojectrequireseitheransdisttarball oraccesstoanupstreamgitrepository '",
        "question": "Does the code get the version of the project ?",
        "answer": "Yes"
    },
    {
        "code": "def get version package name pre version None version os environ get 'OSLO PACKAGE VERSION' None if version return versionversion get version from pkg info package name if version return versionversion get version from git pre version if version return versionraise Exception ' Versioningforthisprojectrequireseitheransdisttarball oraccesstoanupstreamgitrepository '",
        "question": "What does the code get ?",
        "answer": "the version of the project"
    },
    {
        "code": "def dmp slice f m n u K return dmp slice in f m n 0 u K",
        "question": "What does the code take ?",
        "answer": "a continuous subsequence of terms of f in k[x ]"
    },
    {
        "code": "def dmp slice f m n u K return dmp slice in f m n 0 u K",
        "question": "Does the code take a continuous subsequence of terms of f in k[x ] ?",
        "answer": "Yes"
    },
    {
        "code": "def ping google sitemap url None ping url PING URL sitemap full url get sitemap full url sitemap url params urlencode {'sitemap' sitemap full url} urlopen '%s?%s' % ping url params",
        "question": "What does google alert ?",
        "answer": "that the sitemap for the current site has been updated"
    },
    {
        "code": "def ping google sitemap url None ping url PING URL sitemap full url get sitemap full url sitemap url params urlencode {'sitemap' sitemap full url} urlopen '%s?%s' % ping url params",
        "question": "What alerts that the sitemap for the current site has been updated ?",
        "answer": "google"
    },
    {
        "code": "def ping google sitemap url None ping url PING URL sitemap full url get sitemap full url sitemap url params urlencode {'sitemap' sitemap full url} urlopen '%s?%s' % ping url params",
        "question": "Does google alert ?",
        "answer": "Yes"
    },
    {
        "code": "def remote expr return annotate columns expression clause element as expr expr {'remote' True}",
        "question": "Does the code annotate a portion of a primaryjoin expression with a remote annotation ?",
        "answer": "Yes"
    },
    {
        "code": "def remote expr return annotate columns expression clause element as expr expr {'remote' True}",
        "question": "What does the code annotate with a remote annotation ?",
        "answer": "a portion of a primaryjoin expression"
    },
    {
        "code": "def cooperative iter iter try for chunk in iter sleep 0 yield chunk except Exception as err msg ' Error cooperative iterexception%s' % err LOG error msg raise",
        "question": "When does an iterator schedule ?",
        "answer": "after each iteration"
    },
    {
        "code": "def recursive walk function data if isinstance data list return list recursive walk function val for val in data if isinstance data dict return dict key recursive walk function val for key val in data iteritems return function data",
        "question": "How does dicts process ?",
        "answer": "recursively"
    },
    {
        "code": "@verbosedef lcmv epochs epochs forward noise cov data cov reg 0 01 label None pick ori None return generator False picks None rank None verbose None check reference epochs info epochs infotmin epochs times[ 0 ]picks setup picks picks info forward noise cov data epochs get data [ picks ]stcs apply lcmv data data info info tmin tmin forward forward noise cov noise cov data cov data cov reg reg label label picks picks rank rank pick ori pick ori if not return generator stcs [s for s in stcs]return stcs",
        "question": "How did minimum variance constrain ?",
        "answer": "linearly"
    },
    {
        "code": "def env is exposed env return salt utils check whitelist blacklist env whitelist opts ['hgfs env whitelist'] blacklist opts ['hgfs env blacklist']",
        "question": "Do it compare against a whitelist and blacklist ?",
        "answer": "Yes"
    },
    {
        "code": "def env is exposed env return salt utils check whitelist blacklist env whitelist opts ['hgfs env whitelist'] blacklist opts ['hgfs env blacklist']",
        "question": "How do if an environment is exposed check ?",
        "answer": "by comparing it against a whitelist and blacklist"
    },
    {
        "code": "def env is exposed env return salt utils check whitelist blacklist env whitelist opts ['hgfs env whitelist'] blacklist opts ['hgfs env blacklist']",
        "question": "What do it compare ?",
        "answer": "against a whitelist and blacklist"
    },
    {
        "code": "def iter period start end period period start startincrement datetime timedelta seconds period for i in xrange int math ceil timeutils delta seconds start end / float period next start period start + increment yield period start next start period start next start",
        "question": "What did the code split from start to end in periods of a number of seconds ?",
        "answer": "a time"
    },
    {
        "code": "def iter period start end period period start startincrement datetime timedelta seconds period for i in xrange int math ceil timeutils delta seconds start end / float period next start period start + increment yield period start next start period start next start",
        "question": "Did the code split a time from start to end in periods of a number of seconds ?",
        "answer": "Yes"
    },
    {
        "code": "def iter period start end period period start startincrement datetime timedelta seconds period for i in xrange int math ceil timeutils delta seconds start end / float period next start period start + increment yield period start next start period start next start",
        "question": "When did the code split a time from start to end ?",
        "answer": "in periods of a number of seconds"
    },
    {
        "code": "def update Indices db db executescript '\\n--syncing\\ncreateindexifnotexistsix notes usnonnotes usn \\ncreateindexifnotexistsix cards usnoncards usn \\ncreateindexifnotexistsix revlog usnonrevlog usn \\n--cardspacing etc\\ncreateindexifnotexistsix cards nidoncards nid \\n--schedulinganddecklimiting\\ncreateindexifnotexistsix cards schedoncards did queue due \\n--revlogbycard\\ncreateindexifnotexistsix revlog cidonrevlog cid \\n--fielduniqueness\\ncreateindexifnotexistsix notes csumonnotes csum \\n'",
        "question": "Does the code add indices to the db ?",
        "answer": "Yes"
    },
    {
        "code": "def update Indices db db executescript '\\n--syncing\\ncreateindexifnotexistsix notes usnonnotes usn \\ncreateindexifnotexistsix cards usnoncards usn \\ncreateindexifnotexistsix revlog usnonrevlog usn \\n--cardspacing etc\\ncreateindexifnotexistsix cards nidoncards nid \\n--schedulinganddecklimiting\\ncreateindexifnotexistsix cards schedoncards did queue due \\n--revlogbycard\\ncreateindexifnotexistsix revlog cidonrevlog cid \\n--fielduniqueness\\ncreateindexifnotexistsix notes csumonnotes csum \\n'",
        "question": "What does the code add to the db ?",
        "answer": "indices"
    },
    {
        "code": "def get New Repository return Whittle Repository",
        "question": "What does the code get ?",
        "answer": "new repository"
    },
    {
        "code": "def get New Repository return Whittle Repository",
        "question": "Does the code get new repository ?",
        "answer": "Yes"
    },
    {
        "code": "def mw snippet server query snippet url u'https //' + server + u'/w/api php?format json&action query&prop extracts&exintro&explaintext&exchars 300 &redirects&titles ' snippet url + querysnippet json loads web get snippet url snippet snippet[u'query'][u'pages']snippet snippet[list snippet keys [0 ]]return snippet[u'extract']",
        "question": "Does the code retriv a snippet of the specified length from the given page on the given server ?",
        "answer": "Yes"
    },
    {
        "code": "def mw snippet server query snippet url u'https //' + server + u'/w/api php?format json&action query&prop extracts&exintro&explaintext&exchars 300 &redirects&titles ' snippet url + querysnippet json loads web get snippet url snippet snippet[u'query'][u'pages']snippet snippet[list snippet keys [0 ]]return snippet[u'extract']",
        "question": "What does the code retriv from the given page on the given server ?",
        "answer": "a snippet of the specified length"
    },
    {
        "code": "@register filter is safe False @stringfilterdef urlencode value safe None kwargs {}if safe is not None kwargs['safe'] safereturn urlquote value **kwargs",
        "question": "What does the code escape ?",
        "answer": "a value for use in a url"
    },
    {
        "code": "@register filter is safe False @stringfilterdef urlencode value safe None kwargs {}if safe is not None kwargs['safe'] safereturn urlquote value **kwargs",
        "question": "Does the code escape a value for use in a url ?",
        "answer": "Yes"
    },
    {
        "code": "def dump crl type crl bio new mem buf if type FILETYPE PEM ret lib PEM write bio X509 CRL bio crl crl elif type FILETYPE ASN 1 ret lib i2 d X509 CRL bio bio crl crl elif type FILETYPE TEXT ret lib X509 CRL print bio crl crl else raise Value Error 'typeargumentmustbe FILETYPE PEM FILETYPE ASN 1 or FILETYPE TEXT' assert ret 1 return bio to string bio",
        "question": "Does the code dump a certificate revocation list to a buffer ?",
        "answer": "Yes"
    },
    {
        "code": "def dump crl type crl bio new mem buf if type FILETYPE PEM ret lib PEM write bio X509 CRL bio crl crl elif type FILETYPE ASN 1 ret lib i2 d X509 CRL bio bio crl crl elif type FILETYPE TEXT ret lib X509 CRL print bio crl crl else raise Value Error 'typeargumentmustbe FILETYPE PEM FILETYPE ASN 1 or FILETYPE TEXT' assert ret 1 return bio to string bio",
        "question": "What does the code dump to a buffer ?",
        "answer": "a certificate revocation list"
    },
    {
        "code": "def get Evaluated Value default Value element Node key if element Node None return default Valueif key in element Node attributes return get Evaluated Value Obliviously element Node key return default Value",
        "question": "What does the code get ?",
        "answer": "the evaluated value"
    },
    {
        "code": "def get Evaluated Value default Value element Node key if element Node None return default Valueif key in element Node attributes return get Evaluated Value Obliviously element Node key return default Value",
        "question": "Does the code get the evaluated value ?",
        "answer": "Yes"
    },
    {
        "code": "def str to bool string if string is not None if string lower in ['true' 'yes' '1 ' 'on'] return Trueelif string lower in ['false' 'no' '0 ' 'off'] return Falsereturn None",
        "question": "What does the code convert to bool value ?",
        "answer": "a string"
    },
    {
        "code": "def str to bool string if string is not None if string lower in ['true' 'yes' '1 ' 'on'] return Trueelif string lower in ['false' 'no' '0 ' 'off'] return Falsereturn None",
        "question": "Does the code convert a string to bool value ?",
        "answer": "Yes"
    },
    {
        "code": "def shutdown handler List handler List for h in handler List[ ] try h flush h close except if raise Exceptions raise",
        "question": "What does the code perform ?",
        "answer": "any cleanup actions in the logging system"
    },
    {
        "code": "def shutdown handler List handler List for h in handler List[ ] try h flush h close except if raise Exceptions raise",
        "question": "Does the code perform any cleanup actions in the logging system ?",
        "answer": "Yes"
    },
    {
        "code": "def add additional response fields request serialized discussion entities usernames discussion entity type include profile image if include profile image username profile dict get user profile dict request usernames ' ' join usernames for discussion entity in serialized discussion entities discussion entity['users'] get users discussion entity type discussion entity username profile dict return serialized discussion entities",
        "question": "What does the code add to serialized discussion thread / comment ?",
        "answer": "additional data"
    },
    {
        "code": "def add additional response fields request serialized discussion entities usernames discussion entity type include profile image if include profile image username profile dict get user profile dict request usernames ' ' join usernames for discussion entity in serialized discussion entities discussion entity['users'] get users discussion entity type discussion entity username profile dict return serialized discussion entities",
        "question": "Does the code add additional data to serialized discussion thread / comment ?",
        "answer": "Yes"
    },
    {
        "code": "def run Command commandline fd os popen commandline 'r' data fd read xit fd close if xit is not None sys stdout write data raise Runtime Error 'commandfailed %s' % commandline if VERBOSE sys stdout write data sys stdout flush",
        "question": "What does the code run if it fails ?",
        "answer": "a command and raise runtimeerror"
    },
    {
        "code": "def run Command commandline fd os popen commandline 'r' data fd read xit fd close if xit is not None sys stdout write data raise Runtime Error 'commandfailed %s' % commandline if VERBOSE sys stdout write data sys stdout flush",
        "question": "Does the code run a command and raise runtimeerror if it fails ?",
        "answer": "Yes"
    },
    {
        "code": "def show by id show id session None return session query Series filter Series id show id one",
        "question": "How do an instance of a show return ?",
        "answer": "by querying its i d"
    },
    {
        "code": "def module imports on top of file logical line indent level checker state noqa def is string literal line if line[ 0 ] in 'u Ub B' line line[ 1 ]if line and line[ 0 ] in 'r R' line line[ 1 ]return line and line[ 0 ] '\"' or line[ 0 ] \"'\" allowed try keywords 'try' 'except' 'else' 'finally' if indent level returnif not logical line returnif noqa returnline logical lineif line startswith 'import' or line startswith 'from' if checker state get 'seen non imports' False yield 0 'E 402 modulelevelimportnotattopoffile' elif any line startswith kw for kw in allowed try keywords returnelif is string literal line if checker state get 'seen docstring' False checker state['seen non imports'] Trueelse checker state['seen docstring'] Trueelse checker state['seen non imports'] True",
        "question": "When are imports put at the top of the file ?",
        "answer": "always"
    },
    {
        "code": "def srpc *params **kparams kparams[' no ctx'] Truereturn rpc *params **kparams",
        "question": "Do method decorator tag a method as a remote procedure call ?",
        "answer": "Yes"
    },
    {
        "code": "def srpc *params **kparams kparams[' no ctx'] Truereturn rpc *params **kparams",
        "question": "What tags a method as a remote procedure call ?",
        "answer": "method decorator"
    },
    {
        "code": "def srpc *params **kparams kparams[' no ctx'] Truereturn rpc *params **kparams",
        "question": "What do method decorator tag as a remote procedure call ?",
        "answer": "a method"
    },
    {
        "code": "def get Sides Minimum Three Based On Precision element Node radius return max get Sides Based On Precision element Node radius 3",
        "question": "What does the code get ?",
        "answer": "the number of polygon sides"
    },
    {
        "code": "def get Sides Minimum Three Based On Precision element Node radius return max get Sides Based On Precision element Node radius 3",
        "question": "Does the code get the number of polygon sides ?",
        "answer": "Yes"
    },
    {
        "code": "def check digest auth user passwd if request headers get ' Authorization' credentails parse authorization header request headers get ' Authorization' if not credentails returnresponse hash response credentails passwd dict uri request script root + request path body request data method request method if credentails get 'response' response hash return Truereturn False",
        "question": "How do user authentication check ?",
        "answer": "code"
    },
    {
        "code": "def is author or privileged cc content context return context['is requester privileged'] or is author cc content context",
        "question": "What do the requester author ?",
        "answer": "the given content"
    },
    {
        "code": "def is author or privileged cc content context return context['is requester privileged'] or is author cc content context",
        "question": "Do the requester author the given content ?",
        "answer": "Yes"
    },
    {
        "code": "def is author or privileged cc content context return context['is requester privileged'] or is author cc content context",
        "question": "What authored the given content ?",
        "answer": "the requester"
    },
    {
        "code": "def errno from exception e if hasattr e 'errno' return e errnoelif e args return e args[ 0 ]else return None",
        "question": "What does the code provide from an exception object ?",
        "answer": "the errno"
    },
    {
        "code": "def errno from exception e if hasattr e 'errno' return e errnoelif e args return e args[ 0 ]else return None",
        "question": "Does the code provide the errno from an exception object ?",
        "answer": "Yes"
    },
    {
        "code": "@then u'anundefined-stepsnippetshouldnotexistfor\"{step}\"' def step undefined step snippet should not exist for context step undefined step snippet make undefined step snippet step context execute steps u' Thenthecommandoutputshouldnotcontain \\n\"\"\"\\n{undefined step snippet}\\n\"\"\"\\n' format undefined step snippet text indent undefined step snippet 4",
        "question": "For what purpose is an undefined - step snippet provided ?",
        "answer": "for a step in behave command output"
    },
    {
        "code": "def volume glance metadata copy to volume context volume id snapshot id return IMPL volume glance metadata copy to volume context volume id snapshot id",
        "question": "What does the code update from a volume by copying all of the key : value pairs from the originating snapshot ?",
        "answer": "the glance metadata"
    },
    {
        "code": "def volume glance metadata copy to volume context volume id snapshot id return IMPL volume glance metadata copy to volume context volume id snapshot id",
        "question": "Does the code update the glance metadata from a volume by copying all of the key : value pairs from the originating snapshot ?",
        "answer": "Yes"
    },
    {
        "code": "def volume glance metadata copy to volume context volume id snapshot id return IMPL volume glance metadata copy to volume context volume id snapshot id",
        "question": "How does the code update the glance metadata from a volume ?",
        "answer": "by copying all of the key : value pairs from the originating snapshot"
    },
    {
        "code": "def write config config newlines 2 succ write config config newlines changes format changes new config return format state result name '' result succ changes changes",
        "question": "Does the code write the given parameter config into the config file ?",
        "answer": "Yes"
    },
    {
        "code": "def write config config newlines 2 succ write config config newlines changes format changes new config return format state result name '' result succ changes changes",
        "question": "What does the code write into the config file ?",
        "answer": "the given parameter config"
    },
    {
        "code": "def remove Backrefs senderkey try signals connections[senderkey]except Key Error signals Noneelse items signals items def all Receivers for signal set in items for item in set yield item for receiver in all Receivers kill Backref receiver senderkey",
        "question": "What does the code remove ?",
        "answer": "all back - references to this senderkey"
    },
    {
        "code": "def remove Backrefs senderkey try signals connections[senderkey]except Key Error signals Noneelse items signals items def all Receivers for signal set in items for item in set yield item for receiver in all Receivers kill Backref receiver senderkey",
        "question": "Does the code remove all back - references to this senderkey ?",
        "answer": "Yes"
    },
    {
        "code": "def get yaml path builtin name runtime '' if handler dir is None set builtins dir DEFAULT DIR available builtins set available builtins if runtime 'python 27 ' available builtins available builtins - BUILTINS NOT AVAIABLE IN PYTHON 27 if builtin name not in available builtins raise Invalid Builtin Name '%sisnotthenameofavalidbuiltin \\n Availablehandlersare %s' % builtin name ' ' join sorted available builtins return get yaml path builtin name runtime",
        "question": "How does the full path return to a yaml file ?",
        "answer": "by giving the builtin modules name"
    },
    {
        "code": "def setup platform hass config add devices discovery info None file path config[CONF FILE PATH]if not os access file path os R OK LOGGER error 'filepathisnotreadable' return Falseadd devices [ Local File config[CONF NAME] file path ]",
        "question": "Does the code setup the camera ?",
        "answer": "Yes"
    },
    {
        "code": "def setup platform hass config add devices discovery info None file path config[CONF FILE PATH]if not os access file path os R OK LOGGER error 'filepathisnotreadable' return Falseadd devices [ Local File config[CONF NAME] file path ]",
        "question": "What does the code setup ?",
        "answer": "the camera"
    },
    {
        "code": "def clear override for user user block name try Student Field Override objects get course id block runtime course id student id user id location block location field name delete except Student Field Override Does Not Exist pass",
        "question": "When did field override set ?",
        "answer": "previously"
    },
    {
        "code": "@register filter is safe False def dictsort value arg try return sorted value key Variable arg resolve except Type Error Variable Does Not Exist return u''",
        "question": "Does the code take a list of dicts ?",
        "answer": "Yes"
    },
    {
        "code": "@register filter is safe False def dictsort value arg try return sorted value key Variable arg resolve except Type Error Variable Does Not Exist return u''",
        "question": "What does the code take ?",
        "answer": "a list of dicts"
    },
    {
        "code": "def run operation jboss config operation fail on error True retries 1 cli command result call cli jboss config operation retries if cli command result['retcode'] 0 if is cli output cli command result['stdout'] cli result parse cli command result['stdout'] cli result['success'] cli result['outcome'] 'success' else raise Command Execution Error ' Operationhasreturnedunparseableoutput {0 }' format cli command result['stdout'] elif is cli output cli command result['stdout'] cli result parse cli command result['stdout'] cli result['success'] Falsematch re search '^ JBAS\\\\d+ ' cli result['failure-description'] cli result['err code'] match group 1 cli result['stdout'] cli command result['stdout']elif fail on error raise Command Execution Error \" Commandexecutionfailed returncode {retcode} stdout '{stdout}' stderr '{stderr}'\" format **cli command result else cli result {'success' False 'stdout' cli command result['stdout'] 'stderr' cli command result['stderr'] 'retcode' cli command result['retcode']}return cli result",
        "question": "What does the code execute against jboss instance against jboss instance ?",
        "answer": "an operation"
    },
    {
        "code": "def run operation jboss config operation fail on error True retries 1 cli command result call cli jboss config operation retries if cli command result['retcode'] 0 if is cli output cli command result['stdout'] cli result parse cli command result['stdout'] cli result['success'] cli result['outcome'] 'success' else raise Command Execution Error ' Operationhasreturnedunparseableoutput {0 }' format cli command result['stdout'] elif is cli output cli command result['stdout'] cli result parse cli command result['stdout'] cli result['success'] Falsematch re search '^ JBAS\\\\d+ ' cli result['failure-description'] cli result['err code'] match group 1 cli result['stdout'] cli command result['stdout']elif fail on error raise Command Execution Error \" Commandexecutionfailed returncode {retcode} stdout '{stdout}' stderr '{stderr}'\" format **cli command result else cli result {'success' False 'stdout' cli command result['stdout'] 'stderr' cli command result['stderr'] 'retcode' cli command result['retcode']}return cli result",
        "question": "Does the code execute an operation against jboss instance against jboss instance ?",
        "answer": "Yes"
    },
    {
        "code": "def run operation jboss config operation fail on error True retries 1 cli command result call cli jboss config operation retries if cli command result['retcode'] 0 if is cli output cli command result['stdout'] cli result parse cli command result['stdout'] cli result['success'] cli result['outcome'] 'success' else raise Command Execution Error ' Operationhasreturnedunparseableoutput {0 }' format cli command result['stdout'] elif is cli output cli command result['stdout'] cli result parse cli command result['stdout'] cli result['success'] Falsematch re search '^ JBAS\\\\d+ ' cli result['failure-description'] cli result['err code'] match group 1 cli result['stdout'] cli command result['stdout']elif fail on error raise Command Execution Error \" Commandexecutionfailed returncode {retcode} stdout '{stdout}' stderr '{stderr}'\" format **cli command result else cli result {'success' False 'stdout' cli command result['stdout'] 'stderr' cli command result['stderr'] 'retcode' cli command result['retcode']}return cli result",
        "question": "How does the code execute an operation ?",
        "answer": "against jboss instance"
    },
    {
        "code": "def autolog message func inspect currentframe f back f codelogging debug '%s %s in%s %i' % message func co name func co filename func co firstlineno",
        "question": "How do the current function details log ?",
        "answer": "automatically"
    },
    {
        "code": "def reverse x axes if isinstance axes int axes [axes]slices [ slice None None -1 if i in axes else slice None None None for i in range x ndim ]return x[slices]",
        "question": "Does the code reverse a tensor along the the specified axes ?",
        "answer": "Yes"
    },
    {
        "code": "def reverse x axes if isinstance axes int axes [axes]slices [ slice None None -1 if i in axes else slice None None None for i in range x ndim ]return x[slices]",
        "question": "What does the code reverse ?",
        "answer": "a tensor along the the specified axes"
    },
    {
        "code": "def run With Config swarm Config options out Dir None output Label 'default' perm Work Dir None verbosity 1 global g current Verbosity Levelg current Verbosity Level verbosityif out Dir is None out Dir os getcwd if perm Work Dir is None perm Work Dir os getcwd check Overwrite options out Dir generate Exp Files From Swarm Description swarm Config out Dir options['exp Desc Config'] swarm Configoptions['output Label'] output Labeloptions['out Dir'] out Diroptions['perm Work Dir'] perm Work Dirrun Options inject Default Options options validate Options run Options return run Action run Options",
        "question": "Does the code start a swarm ?",
        "answer": "Yes"
    },
    {
        "code": "def run With Config swarm Config options out Dir None output Label 'default' perm Work Dir None verbosity 1 global g current Verbosity Levelg current Verbosity Level verbosityif out Dir is None out Dir os getcwd if perm Work Dir is None perm Work Dir os getcwd check Overwrite options out Dir generate Exp Files From Swarm Description swarm Config out Dir options['exp Desc Config'] swarm Configoptions['output Label'] output Labeloptions['out Dir'] out Diroptions['perm Work Dir'] perm Work Dirrun Options inject Default Options options validate Options run Options return run Action run Options",
        "question": "What does the code start ?",
        "answer": "a swarm"
    },
    {
        "code": "def execute func args msg None verbose 0 dry run 0 if msg is None msg '%s%r' % func name args if msg[ -2 ] ' ' msg msg[ 0 -2 ] + ' ' log info msg if not dry run func *args",
        "question": "Does some action affect the outside world ?",
        "answer": "Yes"
    },
    {
        "code": "def execute func args msg None verbose 0 dry run 0 if msg is None msg '%s%r' % func name args if msg[ -2 ] ' ' msg msg[ 0 -2 ] + ' ' log info msg if not dry run func *args",
        "question": "What affects the outside world ?",
        "answer": "some action"
    },
    {
        "code": "def execute func args msg None verbose 0 dry run 0 if msg is None msg '%s%r' % func name args if msg[ -2 ] ' ' msg msg[ 0 -2 ] + ' ' log info msg if not dry run func *args",
        "question": "What does the code perform ?",
        "answer": "some action that affects the outside world"
    },
    {
        "code": "def execute func args msg None verbose 0 dry run 0 if msg is None msg '%s%r' % func name args if msg[ -2 ] ' ' msg msg[ 0 -2 ] + ' ' log info msg if not dry run func *args",
        "question": "What does some action affect ?",
        "answer": "the outside world"
    },
    {
        "code": "def execute func args msg None verbose 0 dry run 0 if msg is None msg '%s%r' % func name args if msg[ -2 ] ' ' msg msg[ 0 -2 ] + ' ' log info msg if not dry run func *args",
        "question": "Does the code perform some action that affects the outside world ?",
        "answer": "Yes"
    },
    {
        "code": "def cache from env env allow none False return item from env env 'swift cache' allow none",
        "question": "What does the code get from the environment ( which had been previously set by the memcache middleware ?",
        "answer": "memcache connection pool"
    },
    {
        "code": "def cache from env env allow none False return item from env env 'swift cache' allow none",
        "question": "Does the code get memcache connection pool from the environment ( which had been previously set by the memcache middleware ?",
        "answer": "Yes"
    },
    {
        "code": "def cache from env env allow none False return item from env env 'swift cache' allow none",
        "question": "When had by the memcache middleware been set memcache connection pool from the environment ?",
        "answer": "previously"
    },
    {
        "code": "def sub environment env os environ copy env['LANG'] 'C'return env",
        "question": "How do subcommands execute ?",
        "answer": "in"
    },
    {
        "code": "def get tag uri url date url split urlparse urlparse url hostname getattr url split 'hostname' url split[ 1 ] split ' ' [0 ] path url split[ 2 ]fragment url split[ 5 ]d ''if date is not None d ' %s' % datetime safe new datetime date strftime '%Y-%m-%d' return u'tag %s%s %s/%s' % hostname d path fragment",
        "question": "What does the code create ?",
        "answer": "a taguri"
    },
    {
        "code": "def get tag uri url date url split urlparse urlparse url hostname getattr url split 'hostname' url split[ 1 ] split ' ' [0 ] path url split[ 2 ]fragment url split[ 5 ]d ''if date is not None d ' %s' % datetime safe new datetime date strftime '%Y-%m-%d' return u'tag %s%s %s/%s' % hostname d path fragment",
        "question": "Does the code create a taguri ?",
        "answer": "Yes"
    },
    {
        "code": "def smuggle url url data sdata compat urllib parse urlencode {u' youtubedl smuggle' json dumps data } return url + u'#' + sdata",
        "question": "For what purpose do additional data pass in a url ?",
        "answer": "for internal use"
    },
    {
        "code": "def smuggle url url data sdata compat urllib parse urlencode {u' youtubedl smuggle' json dumps data } return url + u'#' + sdata",
        "question": "How do additional data pass for internal use ?",
        "answer": "in a url"
    },
    {
        "code": "def send mail to admin email subject email body app id app identity services get application id body ' Sentfrom%s \\n\\n%s' % app id email body email services send mail feconf SYSTEM EMAIL ADDRESS feconf ADMIN EMAIL ADDRESS email subject body body replace '\\n' '<br/>' bcc admin False",
        "question": "Does the code send an email to the admin email address ?",
        "answer": "Yes"
    },
    {
        "code": "def send mail to admin email subject email body app id app identity services get application id body ' Sentfrom%s \\n\\n%s' % app id email body email services send mail feconf SYSTEM EMAIL ADDRESS feconf ADMIN EMAIL ADDRESS email subject body body replace '\\n' '<br/>' bcc admin False",
        "question": "What does the code send to the admin email address ?",
        "answer": "an email"
    },
    {
        "code": "def instance fault create context values fault ref models Instance Fault fault ref update values fault ref save return dict fault ref iteritems",
        "question": "What does the code create ?",
        "answer": "a new instancefault"
    },
    {
        "code": "def instance fault create context values fault ref models Instance Fault fault ref update values fault ref save return dict fault ref iteritems",
        "question": "Does the code create a new instancefault ?",
        "answer": "Yes"
    },
    {
        "code": "def get url prefixer return getattr locals 'prefixer' None",
        "question": "Does the code get the prefixer for the current thread ?",
        "answer": "Yes"
    },
    {
        "code": "def get url prefixer return getattr locals 'prefixer' None",
        "question": "What does the code get ?",
        "answer": "the prefixer for the current thread"
    },
    {
        "code": "def test sigmoid def ref sigmoid x if x > 0 return 1 / 1 + np exp - x else z np exp x return z / 1 + z sigmoid np vectorize ref sigmoid x K placeholder ndim 2 f K function [x] [activations sigmoid x ] test values get standard values result f [test values] [0 ]expected sigmoid test values assert allclose result expected rtol 1e- 05",
        "question": "How do a numerically stable reference sigmoid implementation use ?",
        "answer": "test"
    },
    {
        "code": "def expr from dict rep *gens result []for monom coeff in rep items term [coeff]for g m in zip gens monom if m term append Pow g m result append Mul *term return Add *result",
        "question": "What does the code convert into an expression ?",
        "answer": "a multinomial form"
    },
    {
        "code": "def expr from dict rep *gens result []for monom coeff in rep items term [coeff]for g m in zip gens monom if m term append Pow g m result append Mul *term return Add *result",
        "question": "Does the code convert a multinomial form into an expression ?",
        "answer": "Yes"
    },
    {
        "code": "def is votable source try with iterparser get xml iterator source as iterator for start tag data pos in iterator if tag u'xml' return Falsebreakfor start tag data pos in iterator if tag u'VOTABLE' return Falsebreakreturn Trueexcept Value Error return False",
        "question": "What does the code read to determine if it is a votable file ?",
        "answer": "the header of a file"
    },
    {
        "code": "def is votable source try with iterparser get xml iterator source as iterator for start tag data pos in iterator if tag u'xml' return Falsebreakfor start tag data pos in iterator if tag u'VOTABLE' return Falsebreakreturn Trueexcept Value Error return False",
        "question": "Does the code read the header of a file to determine if it is a votable file ?",
        "answer": "Yes"
    },
    {
        "code": "def was modified since header None mtime 0 size 0 try if header is None raise Value Errormatches re match '^ [^ ]+ length [0 - 9 ]+ ?$' header re IGNORECASE header mtime parse http date matches group 1 header len matches group 3 if header len and int header len size raise Value Errorif mtime > header mtime raise Value Errorexcept Attribute Error Value Error Overflow Error return Truereturn False",
        "question": "What downloaded it last ?",
        "answer": "the user"
    },
    {
        "code": "def was modified since header None mtime 0 size 0 try if header is None raise Value Errormatches re match '^ [^ ]+ length [0 - 9 ]+ ?$' header re IGNORECASE header mtime parse http date matches group 1 header len matches group 3 if header len and int header len size raise Value Errorif mtime > header mtime raise Value Errorexcept Attribute Error Value Error Overflow Error return Truereturn False",
        "question": "When did something modify ?",
        "answer": "since the user last downloaded it"
    },
    {
        "code": "def was modified since header None mtime 0 size 0 try if header is None raise Value Errormatches re match '^ [^ ]+ length [0 - 9 ]+ ?$' header re IGNORECASE header mtime parse http date matches group 1 header len matches group 3 if header len and int header len size raise Value Errorif mtime > header mtime raise Value Errorexcept Attribute Error Value Error Overflow Error return Truereturn False",
        "question": "Did the user download it last ?",
        "answer": "Yes"
    },
    {
        "code": "def was modified since header None mtime 0 size 0 try if header is None raise Value Errormatches re match '^ [^ ]+ length [0 - 9 ]+ ?$' header re IGNORECASE header mtime parse http date matches group 1 header len matches group 3 if header len and int header len size raise Value Errorif mtime > header mtime raise Value Errorexcept Attribute Error Value Error Overflow Error return Truereturn False",
        "question": "When did the user download it ?",
        "answer": "last"
    },
    {
        "code": "@register tagdef templatetag parser token bits token contents split if len bits 2 raise Template Syntax Error u\"'templatetag'statementtakesoneargument\" tag bits[ 1 ]if tag not in Template Tag Node mapping raise Template Syntax Error u\" Invalidtemplatetagargument '%s' Mustbeoneof %s\" % tag list Template Tag Node mapping return Template Tag Node tag",
        "question": "What used to compose template tags ?",
        "answer": "the bits"
    },
    {
        "code": "@register tagdef templatetag parser token bits token contents split if len bits 2 raise Template Syntax Error u\"'templatetag'statementtakesoneargument\" tag bits[ 1 ]if tag not in Template Tag Node mapping raise Template Syntax Error u\" Invalidtemplatetagargument '%s' Mustbeoneof %s\" % tag list Template Tag Node mapping return Template Tag Node tag",
        "question": "Did the bits use to compose template tags ?",
        "answer": "Yes"
    },
    {
        "code": "@register tagdef templatetag parser token bits token contents split if len bits 2 raise Template Syntax Error u\"'templatetag'statementtakesoneargument\" tag bits[ 1 ]if tag not in Template Tag Node mapping raise Template Syntax Error u\" Invalidtemplatetagargument '%s' Mustbeoneof %s\" % tag list Template Tag Node mapping return Template Tag Node tag",
        "question": "What did the bits use ?",
        "answer": "to compose template tags"
    },
    {
        "code": "def run with reloader main func extra files None interval 1 reloader type 'auto' import signalreloader reloader loops[reloader type] extra files interval signal signal signal SIGTERM lambda *args sys exit 0 try if os environ get 'WERKZEUG RUN MAIN' 'true' t threading Thread target main func args t set Daemon True t start reloader run else sys exit reloader restart with reloader except Keyboard Interrupt pass",
        "question": "What does the code run in an independent python interpreter ?",
        "answer": "the given function"
    },
    {
        "code": "def run with reloader main func extra files None interval 1 reloader type 'auto' import signalreloader reloader loops[reloader type] extra files interval signal signal signal SIGTERM lambda *args sys exit 0 try if os environ get 'WERKZEUG RUN MAIN' 'true' t threading Thread target main func args t set Daemon True t start reloader run else sys exit reloader restart with reloader except Keyboard Interrupt pass",
        "question": "How does the code run the given function ?",
        "answer": "in an independent python interpreter"
    },
    {
        "code": "def run with reloader main func extra files None interval 1 reloader type 'auto' import signalreloader reloader loops[reloader type] extra files interval signal signal signal SIGTERM lambda *args sys exit 0 try if os environ get 'WERKZEUG RUN MAIN' 'true' t threading Thread target main func args t set Daemon True t start reloader run else sys exit reloader restart with reloader except Keyboard Interrupt pass",
        "question": "Does the code run the given function in an independent python interpreter ?",
        "answer": "Yes"
    },
    {
        "code": "def get Float From Character Split Line character split Line line From Character gcodec get String From Character Split Line character split Line if line From Character None return Nonereturn float line From Character",
        "question": "What does the code get after the first occurence of the character in the split line ?",
        "answer": "the float"
    },
    {
        "code": "def get Float From Character Split Line character split Line line From Character gcodec get String From Character Split Line character split Line if line From Character None return Nonereturn float line From Character",
        "question": "When does the code get the float ?",
        "answer": "after the first occurence of the character in the split line"
    },
    {
        "code": "def get Float From Character Split Line character split Line line From Character gcodec get String From Character Split Line character split Line if line From Character None return Nonereturn float line From Character",
        "question": "Does the code get the float after the first occurence of the character in the split line ?",
        "answer": "Yes"
    },
    {
        "code": "def get logger logger if isinstance logger string t logger logging get Logger logger if not logger handlers logger add Handler logging Null Handler return logger",
        "question": "Does the code get logger by name ?",
        "answer": "Yes"
    },
    {
        "code": "def get logger logger if isinstance logger string t logger logging get Logger logger if not logger handlers logger add Handler logging Null Handler return logger",
        "question": "How does the code get logger ?",
        "answer": "by name"
    },
    {
        "code": "def get logger logger if isinstance logger string t logger logging get Logger logger if not logger handlers logger add Handler logging Null Handler return logger",
        "question": "What does the code get by name ?",
        "answer": "logger"
    },
    {
        "code": "def copy 2 src dst shutil copy 2 fsencoding src fsencoding dst",
        "question": "What do that ensure ?",
        "answer": "filesystem encoding of paths"
    },
    {
        "code": "def copy 2 src dst shutil copy 2 fsencoding src fsencoding dst",
        "question": "Do that ensure filesystem encoding of paths ?",
        "answer": "Yes"
    },
    {
        "code": "def stop reactor global twisted threaddef stop reactor '\" Helperforcallingstopfromwithingthethread 'reactor stop reactor call From Thread stop reactor reactor thread join for p in reactor get Delayed Calls if p active p cancel twisted thread None",
        "question": "Does the code join the reactor thread until it stops ?",
        "answer": "Yes"
    },
    {
        "code": "def stop reactor global twisted threaddef stop reactor '\" Helperforcallingstopfromwithingthethread 'reactor stop reactor call From Thread stop reactor reactor thread join for p in reactor get Delayed Calls if p active p cancel twisted thread None",
        "question": "Till when does the code join the reactor thread ?",
        "answer": "until it stops"
    },
    {
        "code": "def stop reactor global twisted threaddef stop reactor '\" Helperforcallingstopfromwithingthethread 'reactor stop reactor call From Thread stop reactor reactor thread join for p in reactor get Delayed Calls if p active p cancel twisted thread None",
        "question": "What does the code join until it stops ?",
        "answer": "the reactor thread"
    },
    {
        "code": "def stop reactor global twisted threaddef stop reactor '\" Helperforcallingstopfromwithingthethread 'reactor stop reactor call From Thread stop reactor reactor thread join for p in reactor get Delayed Calls if p active p cancel twisted thread None",
        "question": "Does the code stop the reactor ?",
        "answer": "Yes"
    },
    {
        "code": "def stop reactor global twisted threaddef stop reactor '\" Helperforcallingstopfromwithingthethread 'reactor stop reactor call From Thread stop reactor reactor thread join for p in reactor get Delayed Calls if p active p cancel twisted thread None",
        "question": "What does the code stop ?",
        "answer": "the reactor"
    },
    {
        "code": "def attach translations collections attach trans dict Collection collections",
        "question": "What did the code put into a translations dict ?",
        "answer": "all translations"
    },
    {
        "code": "def attach translations collections attach trans dict Collection collections",
        "question": "Did the code put all translations into a translations dict ?",
        "answer": "Yes"
    },
    {
        "code": "def whitespace around comma logical line line logical linefor m in WHITESPACE AFTER COMMA REGEX finditer line found m start + 1 if ' DCTB ' in m group yield found \"E 242 tabafter'%s'\" % m group [0 ] else yield found \"E 241 multiplespacesafter'%s'\" % m group [0 ]",
        "question": "Do it align with another ?",
        "answer": "Yes"
    },
    {
        "code": "def whitespace around comma logical line line logical linefor m in WHITESPACE AFTER COMMA REGEX finditer line found m start + 1 if ' DCTB ' in m group yield found \"E 242 tabafter'%s'\" % m group [0 ] else yield found \"E 241 multiplespacesafter'%s'\" % m group [0 ]",
        "question": "What avoids in the following situations : - more than one space around an assignment operator to align it with another ?",
        "answer": "extraneous whitespace"
    },
    {
        "code": "def whitespace around comma logical line line logical linefor m in WHITESPACE AFTER COMMA REGEX finditer line found m start + 1 if ' DCTB ' in m group yield found \"E 242 tabafter'%s'\" % m group [0 ] else yield found \"E 241 multiplespacesafter'%s'\" % m group [0 ]",
        "question": "Do extraneous whitespace avoid in the following situations : - more than one space around an assignment operator to align it with another ?",
        "answer": "Yes"
    },
    {
        "code": "def whitespace around comma logical line line logical linefor m in WHITESPACE AFTER COMMA REGEX finditer line found m start + 1 if ' DCTB ' in m group yield found \"E 242 tabafter'%s'\" % m group [0 ] else yield found \"E 241 multiplespacesafter'%s'\" % m group [0 ]",
        "question": "Where do extraneous whitespace avoid ?",
        "answer": "in the following situations : - more than one space around an assignment operator to align it with another"
    },
    {
        "code": "def whitespace around comma logical line line logical linefor m in WHITESPACE AFTER COMMA REGEX finditer line found m start + 1 if ' DCTB ' in m group yield found \"E 242 tabafter'%s'\" % m group [0 ] else yield found \"E 241 multiplespacesafter'%s'\" % m group [0 ]",
        "question": "What do it align ?",
        "answer": "with another"
    },
    {
        "code": "def assert false expr msg None if expr report failure msg",
        "question": "Does the code fail the test if the expression is true ?",
        "answer": "Yes"
    },
    {
        "code": "def assert false expr msg None if expr report failure msg",
        "question": "What does the code fail if the expression is true ?",
        "answer": "the test"
    },
    {
        "code": "def create app name site sourcepath apppool None ret {'name' name 'changes' {} 'comment' str 'result' None}current apps salt ['win iis list apps'] site if name in current apps ret['comment'] ' Applicationalreadypresent {0 }' format name ret['result'] Trueelif opts ['test'] ret['comment'] ' Applicationwillbecreated {0 }' format name ret['changes'] {'old' None 'new' name}else ret['comment'] ' Createdapplication {0 }' format name ret['changes'] {'old' None 'new' name}ret['result'] salt ['win iis create app'] name site sourcepath apppool return ret",
        "question": "What does the code create ?",
        "answer": "an iis application"
    },
    {
        "code": "def create app name site sourcepath apppool None ret {'name' name 'changes' {} 'comment' str 'result' None}current apps salt ['win iis list apps'] site if name in current apps ret['comment'] ' Applicationalreadypresent {0 }' format name ret['result'] Trueelif opts ['test'] ret['comment'] ' Applicationwillbecreated {0 }' format name ret['changes'] {'old' None 'new' name}else ret['comment'] ' Createdapplication {0 }' format name ret['changes'] {'old' None 'new' name}ret['result'] salt ['win iis create app'] name site sourcepath apppool return ret",
        "question": "Does the code create an iis application ?",
        "answer": "Yes"
    },
    {
        "code": "def ones shape dtype numpy float 32 stream None warnings warn 'chainer cuda onesisdeprecated Usecupy onesinstead ' Deprecation Warning check cuda available assert stream is None return cupy ones shape dtype dtype",
        "question": "What does the code create ?",
        "answer": "a zero - filled : class : cupy"
    },
    {
        "code": "def ones shape dtype numpy float 32 stream None warnings warn 'chainer cuda onesisdeprecated Usecupy onesinstead ' Deprecation Warning check cuda available assert stream is None return cupy ones shape dtype dtype",
        "question": "Does the code create a zero - filled : class : cupy ?",
        "answer": "Yes"
    },
    {
        "code": "def get New Repository return Clairvoyance Repository",
        "question": "What does the code get ?",
        "answer": "new repository"
    },
    {
        "code": "def get New Repository return Clairvoyance Repository",
        "question": "Does the code get new repository ?",
        "answer": "Yes"
    },
    {
        "code": "def run module as main mod name set argv 0 True try loader code fname get module details mod name except Import Error as exc if set argv 0 info str exc else info \"can'tfind' main py'in%r\" % sys argv[ 0 ] msg '%s %s' % sys executable info sys exit msg pkg name mod name rpartition ' ' [0 ]main globals sys modules[' main '] dict if set argv 0 sys argv[ 0 ] fnamereturn run code code main globals None ' main ' fname loader pkg name",
        "question": "Where does the code run the designated module ?",
        "answer": "in the _ _ main _ _ namespace"
    },
    {
        "code": "def run module as main mod name set argv 0 True try loader code fname get module details mod name except Import Error as exc if set argv 0 info str exc else info \"can'tfind' main py'in%r\" % sys argv[ 0 ] msg '%s %s' % sys executable info sys exit msg pkg name mod name rpartition ' ' [0 ]main globals sys modules[' main '] dict if set argv 0 sys argv[ 0 ] fnamereturn run code code main globals None ' main ' fname loader pkg name",
        "question": "What does the code run in the _ _ main _ _ namespace ?",
        "answer": "the designated module"
    },
    {
        "code": "def run module as main mod name set argv 0 True try loader code fname get module details mod name except Import Error as exc if set argv 0 info str exc else info \"can'tfind' main py'in%r\" % sys argv[ 0 ] msg '%s %s' % sys executable info sys exit msg pkg name mod name rpartition ' ' [0 ]main globals sys modules[' main '] dict if set argv 0 sys argv[ 0 ] fnamereturn run code code main globals None ' main ' fname loader pkg name",
        "question": "Does the code run the designated module in the _ _ main _ _ namespace ?",
        "answer": "Yes"
    },
    {
        "code": "def get database engine options kwargs conversions {'convert unicode' string as bool 'pool timeout' int 'echo' string as bool 'echo pool' string as bool 'pool recycle' int 'pool size' int 'max overflow' int 'pool threadlocal' string as bool}prefix 'database engine option 'prefix len len prefix rval {}for key value in kwargs items if key startswith prefix key key[prefix len ]if key in conversions value conversions[key] value rval[key] valuereturn rval",
        "question": "How be the sqlalchemy database engine passed ?",
        "answer": "by using the prefix \" database_engine_option \""
    },
    {
        "code": "def run hive args check return code True cmd load hive cmd + args p subprocess Popen cmd stdout subprocess PIPE stderr subprocess PIPE stdout stderr p communicate if check return code and p returncode 0 raise Hive Command Error ' Hivecommand {0 }failedwitherrorcode {1 }' format '' join cmd p returncode stdout stderr return stdout",
        "question": "In which direction does the code run the hive ?",
        "answer": "from the command line"
    },
    {
        "code": "def run hive args check return code True cmd load hive cmd + args p subprocess Popen cmd stdout subprocess PIPE stderr subprocess PIPE stdout stderr p communicate if check return code and p returncode 0 raise Hive Command Error ' Hivecommand {0 }failedwitherrorcode {1 }' format '' join cmd p returncode stdout stderr return stdout",
        "question": "What does the code run from the command line ?",
        "answer": "the hive"
    },
    {
        "code": "def run hive args check return code True cmd load hive cmd + args p subprocess Popen cmd stdout subprocess PIPE stderr subprocess PIPE stdout stderr p communicate if check return code and p returncode 0 raise Hive Command Error ' Hivecommand {0 }failedwitherrorcode {1 }' format '' join cmd p returncode stdout stderr return stdout",
        "question": "Does the code run the hive from the command line ?",
        "answer": "Yes"
    },
    {
        "code": "def hostgroup get name None groupids None hostids None **connection args conn args login **connection args try if conn args method 'hostgroup get'params {'output' 'extend'}if not groupids and not name and not hostids return Falseif name name dict {'name' name}params setdefault 'filter' name dict if groupids params setdefault 'groupids' groupids if hostids params setdefault 'hostids' hostids params params extend params **connection args ret query method params conn args['url'] conn args['auth'] return ret['result'] if len ret['result'] > 0 else False else raise Key Errorexcept Key Error return False",
        "question": "How do host groups retrieve ?",
        "answer": "according to the given parameters"
    },
    {
        "code": "def items mappingorseq return mappingorseq iteritems if hasattr mappingorseq 'iteritems' else mappingorseq",
        "question": "How did mappings represent ?",
        "answer": "by dicts or sequences"
    },
    {
        "code": "def fanout cast conf context topic msg connection pool LOG debug ' Makingasynchronousfanoutcast ' add unique id msg pack context msg context with Connection Context conf connection pool as conn conn fanout send topic rpc common serialize msg msg",
        "question": "Does the code send a message on a fanout exchange without waiting for a response ?",
        "answer": "Yes"
    },
    {
        "code": "def fanout cast conf context topic msg connection pool LOG debug ' Makingasynchronousfanoutcast ' add unique id msg pack context msg context with Connection Context conf connection pool as conn conn fanout send topic rpc common serialize msg msg",
        "question": "How does the code send a message on a fanout exchange ?",
        "answer": "without waiting for a response"
    },
    {
        "code": "def fanout cast conf context topic msg connection pool LOG debug ' Makingasynchronousfanoutcast ' add unique id msg pack context msg context with Connection Context conf connection pool as conn conn fanout send topic rpc common serialize msg msg",
        "question": "Where does the code send a message without waiting for a response ?",
        "answer": "on a fanout exchange"
    },
    {
        "code": "def fanout cast conf context topic msg connection pool LOG debug ' Makingasynchronousfanoutcast ' add unique id msg pack context msg context with Connection Context conf connection pool as conn conn fanout send topic rpc common serialize msg msg",
        "question": "What does the code send on a fanout exchange without waiting for a response ?",
        "answer": "a message"
    },
    {
        "code": "def false return False",
        "question": "When do false cli example return ?",
        "answer": "always"
    },
    {
        "code": "def db del user username user get object User username username if user user delete",
        "question": "What does the code delete from database ?",
        "answer": "a user"
    },
    {
        "code": "def db del user username user get object User username username if user user delete",
        "question": "Does the code delete a user from database ?",
        "answer": "Yes"
    },
    {
        "code": "def libvlc audio get volume p mi f Cfunctions get 'libvlc audio get volume' None or Cfunction 'libvlc audio get volume' 1 None ctypes c int Media Player return f p mi",
        "question": "Does the code get current software audio volume ?",
        "answer": "Yes"
    },
    {
        "code": "def libvlc audio get volume p mi f Cfunctions get 'libvlc audio get volume' None or Cfunction 'libvlc audio get volume' 1 None ctypes c int Media Player return f p mi",
        "question": "What does the code get ?",
        "answer": "current software audio volume"
    },
    {
        "code": "def get category by name app name sa session app model context currenttry return sa session query app model Category filter by name name one except sqlalchemy orm exc No Result Found return None",
        "question": "How does the code get a category from the database ?",
        "answer": "via name"
    },
    {
        "code": "def get category by name app name sa session app model context currenttry return sa session query app model Category filter by name name one except sqlalchemy orm exc No Result Found return None",
        "question": "What does the code get from the database via name ?",
        "answer": "a category"
    },
    {
        "code": "def get category by name app name sa session app model context currenttry return sa session query app model Category filter by name name one except sqlalchemy orm exc No Result Found return None",
        "question": "Does the code get a category from the database via name ?",
        "answer": "Yes"
    },
    {
        "code": "def unidecode string if version info[ 0 ] < 3 and not isinstance string unicode warnings warn ' Argument%risnotanunicodeobject Passinganencodedstringwilllikelyhaveunexpectedresults ' % type string Runtime Warning 2 retval []for char in string codepoint ord char if codepoint < 128 retval append str char continueif codepoint > 983039 continueif 55296 < codepoint < 57343 warnings warn ' Surrogatecharacter%rwillbeignored Youmightbeusinganarrow Pythonbuild ' % char Runtime Warning 2 section codepoint >> 8 position codepoint % 256 try table Cache[section]except Key Error try mod import 'unidecode x% 03 x' % section globals locals ['data'] except Import Error Cache[section] Nonecontinue Cache[section] table mod dataif table and len table > position retval append table[position] return '' join retval",
        "question": "Does the code transliterate an unicode object into an ascii string ?",
        "answer": "Yes"
    },
    {
        "code": "def unidecode string if version info[ 0 ] < 3 and not isinstance string unicode warnings warn ' Argument%risnotanunicodeobject Passinganencodedstringwilllikelyhaveunexpectedresults ' % type string Runtime Warning 2 retval []for char in string codepoint ord char if codepoint < 128 retval append str char continueif codepoint > 983039 continueif 55296 < codepoint < 57343 warnings warn ' Surrogatecharacter%rwillbeignored Youmightbeusinganarrow Pythonbuild ' % char Runtime Warning 2 section codepoint >> 8 position codepoint % 256 try table Cache[section]except Key Error try mod import 'unidecode x% 03 x' % section globals locals ['data'] except Import Error Cache[section] Nonecontinue Cache[section] table mod dataif table and len table > position retval append table[position] return '' join retval",
        "question": "What does the code transliterate into an ascii string ?",
        "answer": "an unicode object"
    },
    {
        "code": "def touched ae dst pardir os path split dst [0 ]if not pardir pardir os curdirimport Finderf Finder Finder f update File FS Ref pardir",
        "question": "Does the code tell the finder a file has changed ?",
        "answer": "Yes"
    },
    {
        "code": "def touched ae dst pardir os path split dst [0 ]if not pardir pardir os curdirimport Finderf Finder Finder f update File FS Ref pardir",
        "question": "What does the code tell a file has changed ?",
        "answer": "the finder"
    },
    {
        "code": "def spawn argv master read read stdin read read if type argv type '' argv argv pid master fd fork if pid CHILD os execlp argv[ 0 ] *argv try mode tty tcgetattr STDIN FILENO tty setraw STDIN FILENO restore 1except tty error restore 0try copy master fd master read stdin read except OS Error if restore tty tcsetattr STDIN FILENO tty TCSAFLUSH mode os close master fd return os waitpid pid 0 [1 ]",
        "question": "What does the code create ?",
        "answer": "a spawned process"
    },
    {
        "code": "def spawn argv master read read stdin read read if type argv type '' argv argv pid master fd fork if pid CHILD os execlp argv[ 0 ] *argv try mode tty tcgetattr STDIN FILENO tty setraw STDIN FILENO restore 1except tty error restore 0try copy master fd master read stdin read except OS Error if restore tty tcsetattr STDIN FILENO tty TCSAFLUSH mode os close master fd return os waitpid pid 0 [1 ]",
        "question": "Does the code create a spawned process ?",
        "answer": "Yes"
    },
    {
        "code": "@require context@pick context manager writerdef ec 2 snapshot create context snapshot uuid id None ec 2 snapshot ref models Snapshot Id Mapping ec 2 snapshot ref update {'uuid' snapshot uuid} if id is not None ec 2 snapshot ref update {'id' id} ec 2 snapshot ref save context session return ec 2 snapshot ref",
        "question": "How do ec2 compatible snapshot create ?",
        "answer": "by provided uuid"
    },
    {
        "code": "def roberts pos diag image mask None assert nD image 2 image img as float image result convolve image ROBERTS PD WEIGHTS return mask filter result result mask",
        "question": "What does the code find using roberts cross operator ?",
        "answer": "the cross edges of an image"
    },
    {
        "code": "def roberts pos diag image mask None assert nD image 2 image img as float image result convolve image ROBERTS PD WEIGHTS return mask filter result result mask",
        "question": "How does the code find the cross edges of an image ?",
        "answer": "using roberts cross operator"
    },
    {
        "code": "def roberts pos diag image mask None assert nD image 2 image img as float image result convolve image ROBERTS PD WEIGHTS return mask filter result result mask",
        "question": "Does the code find the cross edges of an image using roberts cross operator ?",
        "answer": "Yes"
    },
    {
        "code": "def pre save handler sender instance **kwargs taglist parse tag input instance tags instance tags taglist to string taglist",
        "question": "How do the tag field save ?",
        "answer": "alphabetically"
    },
    {
        "code": "def pre save handler sender instance **kwargs taglist parse tag input instance tags instance tags taglist to string taglist",
        "question": "How do the tag field sort ?",
        "answer": "alphabetically"
    },
    {
        "code": "def rename ep file cur path new path old path length 0 new dest dir new dest name os path split new path if old path length 0 or old path length > len cur path cur file name cur file ext os path splitext cur path else cur file ext cur path[old path length ]new path + cur file extmake dirs os path dirname new path try logger log u' Renamingfilefrom' + cur path + 'to' + new path ek ek os rename cur path new path except OS Error IO Error as e logger log u' Failedrenaming' + cur path + 'to' + new path + ' ' + ex e logger ERROR return Falsedelete empty folders ek ek os path dirname cur path return True",
        "question": "For what purpose did all folders need ?",
        "answer": "to move a file to its new location"
    },
    {
        "code": "def fetch crl project id if not CONF use project ca project id Nonecrl file path crl path project id if not os path exists crl file path raise exception Crypto CRL File Not Found project project id with open crl file path 'r' as crlfile return crlfile read",
        "question": "What does the code get for project ?",
        "answer": "crl file"
    },
    {
        "code": "def fetch crl project id if not CONF use project ca project id Nonecrl file path crl path project id if not os path exists crl file path raise exception Crypto CRL File Not Found project project id with open crl file path 'r' as crlfile return crlfile read",
        "question": "Does the code get crl file for project ?",
        "answer": "Yes"
    }
]